@model IEnumerable<EmployeeHistoryApplication.Models.Employee>
@using EmployeeHistoryApplication.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<EmployeesController> _localizer;

@{
    ViewData["Title"] = "Index";
}

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Bootstrap 4 (if using Bootstrap 4) -->
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

<!-- Or Bootstrap 5 (if using Bootstrap 5) -->
<!-- Bootstrap 5 doesn't require jQuery -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>


<a asp-action="Create">@_localizer["CreateNewString"]</a>
</p>
<form method="get" asp-action="Index">
    <div class="form-group">
        <input type="text" name="searchString" class="form-control" placeholder="@_localizer["SearchByString"]" value="@ViewData["SearchString"]" />
    </div>
    <button type="submit" class="btn btn-primary">@_localizer["SearchButtonString"]</button>
    @if (!string.IsNullOrEmpty(@ViewBag.SearchString))
    {
        <a href="@Url.Action("Index", new { searchString = string.Empty })" class="btn btn-secondary">@_localizer["RemoveFilterString"]</a>
    }
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Surname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Adress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EMBG)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Surname)</td>
                <td>@Html.DisplayFor(modelItem => item.Adress)</td>
                <td>@Html.DisplayFor(modelItem => item.EMBG)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">@_localizer["EditString"]</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">@_localizer["DetailsString"]</a> |
                    <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#myModal" data-id="@item.Id" data-name="@item.Name" data-surname="@item.Surname">@_localizer["DeleteString"]</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination">
    @if (ViewData["CurrentPage"] is int currentPage && ViewData["TotalPages"] is int totalPages)
    {
        <ul class="pagination">
            @if (currentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, searchString = ViewData["SearchString"] })">@_localizer["PreviousString"]</a>
                </li>
            }

            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, searchString = ViewData["SearchString"] })">@i</a>
                </li>
            }

            @if (currentPage < totalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, searchString = ViewData["SearchString"] })">>@_localizer["NextString"]</a>
                </li>
            }
        </ul>

    }
    <p>
        &emsp; &emsp;  &emsp; &emsp;  &emsp; &emsp;  &emsp; &emsp;  &emsp; &emsp; &emsp; &emsp;  &emsp; &emsp;  &emsp; &emsp;  &emsp; &emsp;  &emsp; &emsp;  Приказ на @ViewData["DisplayedEmployees"] од вкупно @ViewData["TotalEmployees"] вработени
    </p>
</div>
<a href="@Url.Action("ExportToExcel")" class="btn btn-secondary">@_localizer["ExportAllEmployeesText"]</a>

<!-- Modal Template -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title" id="myModalLabel">Delete employee</h4>
            </div>
            <div class="modal-body" style="text-align: center;">
                <p>Are you sure you want to delete the employee?</p>
                <h5 id="employeeName"></h5>
                <br />
                <p>With all records history?</p>
                <br />
                <p style="color: red; font-weight: bold;"></p>
                <input type="range" id="confirmSlider" min="0" max="100" value="0" oninput="checkSlider()">
            </div>
            <div class="modal-footer">
                <a href="#" data-dismiss="modal" class="btn">Close</a>
                <form asp-action="Delete" id="deleteForm">
                    <input type="hidden" name="id" id="employeeId" />
                    <input type="submit" value="Delete" class="btn btn-danger" id="deleteButton" disabled />
                </form>
            </div>
        </div>
    </div>
</div>

<script>
   
    $('#myModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget);
        var employeeId = button.data('id'); 
        var employeeName = button.data('name');
        var employeeSurname = button.data('surname');

        var modal = $(this);
        modal.find('#employeeName').text(employeeName + ' ' + employeeSurname);
        modal.find('#employeeId').val(employeeId);
    });

    function checkSlider() {
        var slider = document.getElementById("confirmSlider");
        var deleteButton = document.getElementById("deleteButton");
        if (slider.value == 100) {
            deleteButton.disabled = false;
        } else {
            deleteButton.disabled = true;
        }
    }
</script>
