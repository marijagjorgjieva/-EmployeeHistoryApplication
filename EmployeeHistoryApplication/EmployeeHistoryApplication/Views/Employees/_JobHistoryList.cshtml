@model IEnumerable<EmployeeHistoryApplication.Models.JobHistory>
@using EmployeeHistoryApplication.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<EmployeesController> _localizer;

<h4>@_localizer["JobHistory"]</h4>

@(Html.Kendo().Grid<JobHistory>()
    .Name("employeesGrid")
    .Columns(columns =>
    {
        columns.Bound(p => p.CompanyName).Title(@_localizer["CompanyName"]).Width(120);
        columns.Bound(p => p.JobPostition).Title(@_localizer["JobPosition"]).Width(120);
        columns.Bound(p => p.dateFrom)
               .Title(@_localizer["DateFrom"])
               .Width(150)
               .ClientTemplate("#= dateFrom ? kendo.toString(kendo.parseDate(dateFrom), 'dd/MM/yyyy') : '- at moment' #");
        columns.Bound(p => p.dateTo)
               .Title(@_localizer["DateTo"])
               .Width(120)
               .ClientTemplate("#= dateTo ? kendo.toString(kendo.parseDate(dateTo), 'dd/MM/yyyy') : '- at moment' #");
    })
        .ToolBar(tools => tools.Excel())
        .Groupable()
        .Sortable()
        .Filterable()
        .Pageable(pageable => pageable
            .ButtonCount(5)
            .Refresh(true)
            .PageSizes(new[] { 2, 4, 26 }))
        .Excel(excel => excel
            .FileName("Jobs List.xlsx")
        )
        .HtmlAttributes(new { style = "height:500px;" })
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(4)
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("Grid_Read_Jobs", "Employees").Data("getEmployeeId"))
        )
)

<script>
    function getEmployeeId() {
        var employeeId = @Model.FirstOrDefault()?.EmployeeId;
        return { id: employeeId };
    }
</script>
