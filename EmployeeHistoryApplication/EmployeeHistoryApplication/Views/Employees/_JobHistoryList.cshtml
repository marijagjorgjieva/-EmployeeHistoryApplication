@model IEnumerable<EmployeeHistoryApplication.Models.JobHistory>
@using EmployeeHistoryApplication.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<EmployeesController> _localizer;

<h4>@_localizer["JobHistory"]</h4>
<table class="table">
    <thead>
        <tr>
            <th>@_localizer["CompanyName"]</th>
            <th>@_localizer["JobPosition"]</th>
            <th>
                @_localizer["DateFrom"]
                @if (ViewData["SortOrder"]?.ToString() == "dateFrom")
                {
                    <span>&#8593;</span> 
                }
                else if (ViewData["SortOrder"]?.ToString() == "dateFrom_desc")
                {
                    <span>&#8595;</span> 
                }
            </th>
            <th>
                @_localizer["DateTo"]
                @if (ViewData["SortOrder"]?.ToString() == "dateTo")
                {
                    <span>&#8593;</span> 
                }
                else if (ViewData["SortOrder"]?.ToString() == "dateTo_desc")
                {
                    <span>&#8595;</span> 
                }
            </th>
        </tr>
    </thead>
    <tbody>
        @{
            var sortedModel = Model;

            var sortOrder = ViewData["SortOrder"]?.ToString();

            switch (sortOrder)
            {
                case "dateFrom_desc":
                    sortedModel = sortedModel.OrderByDescending(j => j.dateFrom).ToList();
                    break;
                case "dateTo_desc":
                    sortedModel = sortedModel.OrderByDescending(j => j.dateTo).ToList();
                    break;
                case "dateFrom":
                    sortedModel = sortedModel.OrderBy(j => j.dateFrom).ToList();
                    break;
                case "dateTo":
                    sortedModel = sortedModel.OrderBy(j => j.dateTo).ToList();
                    break;
                default:
                    sortedModel = sortedModel.OrderByDescending(j => j.dateFrom).ToList();
                    break;
            }

        }

        @foreach (var job in sortedModel) // Loop through the sorted list
        {
            <tr>
                <td>@job.CompanyName</td>
                <td>@job.JobPostition</td>
                <td>@job.dateFrom.ToShortDateString()</td>
                <td>
                    @if (job.dateTo == null)
                    {
                        <span style="font-weight: bold; font-style: italic; color: green;"> - at moment</span>
                    }
                    else
                    {
                        @job.dateTo?.ToShortDateString()
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
